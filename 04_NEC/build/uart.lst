                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module uart
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _uart_init
                                     12 	.globl _putchar
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	src/uart.c: 5: void uart_init(void) {
                                     51 ;	-----------------------------------------
                                     52 ;	 function uart_init
                                     53 ;	-----------------------------------------
      000000                         54 _uart_init:
                                     55 ;	src/uart.c: 7: GPIOD->DDR |= (1 << 5);
      000000 72 1A 50 11      [ 1]   56 	bset	0x5011, #5
                                     57 ;	src/uart.c: 8: GPIOD->CR1 |= (1 << 5);
      000004 72 1A 50 12      [ 1]   58 	bset	0x5012, #5
                                     59 ;	src/uart.c: 14: USART1->BRR2 = 0x03;
      000008 35 03 52 33      [ 1]   60 	mov	0x5233+0, #0x03
                                     61 ;	src/uart.c: 15: USART1->BRR1 = 0x68;
      00000C 35 68 52 32      [ 1]   62 	mov	0x5232+0, #0x68
                                     63 ;	src/uart.c: 18: USART1->CR2 |= (1 << 3); // TEN: Transmitter Enable
      000010 72 16 52 35      [ 1]   64 	bset	0x5235, #3
                                     65 ;	src/uart.c: 19: }
      000014 81               [ 4]   66 	ret
                                     67 ;	src/uart.c: 22: int putchar(int c) {
                                     68 ;	-----------------------------------------
                                     69 ;	 function putchar
                                     70 ;	-----------------------------------------
      000015                         71 _putchar:
                                     72 ;	src/uart.c: 25: if (c == '\n') {
      000015 A3 00 0A         [ 2]   73 	cpw	x, #0x000a
      000018 26 07            [ 1]   74 	jrne	00103$
                                     75 ;	src/uart.c: 26: putchar('\r');
      00001A 89               [ 2]   76 	pushw	x
      00001B AE 00 0D         [ 2]   77 	ldw	x, #0x000d
      00001E AD F5            [ 4]   78 	callr	_putchar
      000020 85               [ 2]   79 	popw	x
                                     80 ;	src/uart.c: 30: while (!(USART1->SR & (1 << 7)));
      000021                         81 00103$:
      000021 C6 52 30         [ 1]   82 	ld	a, 0x5230
      000024 2A FB            [ 1]   83 	jrpl	00103$
                                     84 ;	src/uart.c: 33: USART1->DR = c;
      000026 9F               [ 1]   85 	ld	a, xl
      000027 C7 52 31         [ 1]   86 	ld	0x5231, a
                                     87 ;	src/uart.c: 35: return c;
                                     88 ;	src/uart.c: 36: }
      00002A 81               [ 4]   89 	ret
                                     90 	.area CODE
                                     91 	.area CONST
                                     92 	.area INITIALIZER
                                     93 	.area CABS (ABS)
